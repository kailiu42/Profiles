# DivineEngine Quantumult 配置示例
#
# 以 ";" 或 "#" 或 "//" 开头的行为注释行。
#
# 最新完整的示例需查看 Quantumult X 里「配置文件」中的「示例」
#

[general]
;profile_img_url=http://www.example.com/example.png

# resource_parser_url 示例可以在以下网站找到 https://raw.githubusercontent.com/crossutility/Quantumult-X/master/resource-parser.js
resource_parser_url=https://cdn.jsdelivr.net/gh/KOP-XIAO/QuantumultX@master/Scripts/resource-parser.js
;resource_parser_url=https://fastip.icu/QuantumultX/Scripts/resource-parser.js

;geo_location_checker=http://www.example.com/json/, https://www.example.com/script.js
# geo_location_checker=http://ip-api.com/json/?lang=zh-CN, https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/IP_API.js
geo_location_checker=http://ip-api.com/json/?lang=zh-CN, https://fastip.icu/QuantumultX/Scripts/IP_API.js

# Quantumult 使用 HEAD 方法将 HTTP 请求发送到服务器检查 url 来测试代理的状态，结果应该是两个延迟，第一个是 TCP 与代理服务器的握手，第二个是 Quantumult 成功地从服务器检查 url 接收 HTTP 响应的总时间。闪电图标表示 TCP Fast Open 成功。如果 [server_local] 或 [server_remote] 中的服务器有自己的 server_check_url，则会用自己的 server_check_url 代替 [general] 中的 server_check_url。
# Quantumult 使用 HTTP HEAD 方法对测试网址 server_check_url 进行网页响应性测试(测试结果为通过该节点访问此网页获得 HTTP 响应所需要的时间)，来确认节点的可用性。
# Quantumult 界面中的延迟测试方式均为网页响应性测试，显示的最终延迟均为通过对应节点访问测试网页获得 HTTP 响应所需要时间。
# 由于 Trojan 协议为无响应校验协议，使得 HTTP 检测方式即使获得了 HTTP 响应，也不代表节点一定可用。
server_check_url=http://cp.cloudflare.com/generate_204

# DNS 排除列表
# dns_exclusion_list 包含了禁用占位符 IP (240.*) 的域，不在 dns_exclusion_list 中的域都启用了占位符 IP，并打开了 resolve-on-remote 设置。
;dns exclusion list中的域名将不使用fake-ip方式. 其它域名则全部采用 fake-ip 及远程解析的模式
##### 参考：https://github.com/VirgilClyne/GetSomeFries/wiki/%F0%9F%8C%90-%E9%80%9A%E7%94%A8
dns_exclusion_list=*.local, *.lan, *.lab, *.vm, fastip.icu, *.fastip.icu, pennyos.com, *.pennyos.com, tplogin.cn, *.direct, cable.auth.com, *.msftconnecttest.com, *.msftncsi.com, network-test.debian.org, detectportal.firefox.com, resolver1.opendns.com, *.srv.nintendo.net, *.stun.playstation.net, xbox.*.microsoft.com, *.xboxlive.com, stun.*, global.turn.twilio.com, global.stun.twilio.com, app.yinxiang.com, injections.adguard.org, local.adguard.org, cable.auth.com, localhost.*.qq.com, localhost.*.weixin.qq.com, *.logon.battlenet.com.cn, *.logon.battle.net, *.blzstatic.cn, music.163.com, *.music.163.com, *.126.net, musicapi.taihe.com, music.taihe.com, songsearch.kugou.com, trackercdn.kugou.com, *.kuwo.cn, api-jooxtt.sanook.com, api.joox.com, joox.com, y.qq.com, *.y.qq.com, streamoc.music.tc.qq.com, mobileoc.music.tc.qq.com, isure.stream.qqmusic.qq.com, dl.stream.qqmusic.qq.com, aqqmusic.tc.qq.com, amobile.music.tc.qq.com, *.xiami.com, *.music.migu.cn, music.migu.cn, proxy.golang.org, *.mcdn.bilivideo.cn, *.cmpassport.com, id6.me, open.e.189.cn, mdn.open.wo.cn, opencloud.wostore.cn, auth.wosms.cn, *.jegotrip.com.cn, *.icitymobile.mobi, *.pingan.com.cn, *.cmbchina.com, pool.ntp.org, *.pool.ntp.org, ntp.*.com, time.*.com, ntp?.*.com, time?.*.com, time.*.gov, time.*.edu.cn, *.ntp.org.cn, PDC._msDCS.*.*, DC._msDCS.*.*, GC._msDCS.*.*

# Quantumult 将不会处理到 excluded_routes 的流量。修改后最好重新启动您的设备。
;excluded_routes=192.168.0.0/16, 172.16.0.0/12, 100.64.0.0/10, 10.0.0.0/8
# Hearthstone: 24.105.30.129/32, 185.60.112.157/32, 185.60.112.158/32, 182.162.132.1/32
;excluded_routes=239.255.255.250/32, 24.105.30.129/32, 185.60.112.157/32, 185.60.112.158/32, 182.162.132.1/32
excluded_routes=192.168.0.0/16, 172.16.0.0/12, 100.64.0.0/10, 10.0.0.0/8, 239.255.255.250/32, 24.105.30.129/32, 185.60.112.157/32, 185.60.112.158/32, 182.162.132.1/32

# 在网络环境切换时出发运行模式变更
# filter - 规则分流，all_proxy - 全部代理，all_direct - 全部直连
# 示例意思：[蜂窝数据],[Wi-Fi],[SSID]
# 下列示例的意思为：在蜂窝数据使用规则分流(第一个 filter)，在 Wi-Fi 使用规则分流(第二个 filter)，在 SSID 为 LINK_22E171 的 Wi-Fi 使用全部代理，，在 SSID 为 LINK_22E172 的 Wi-Fi 使用全部直连
# Rewrite 及 Task 模块始终生效
;running_mode_trigger=filter, filter, LINK_22E171:all_proxy, LINK_22E172:all_direct

# 在特定 SSID 网络时(除了 Task 模块)暂停 Quantumult X
;ssid_suspended_list=Mondeo, Mondeo-Guest

# 参数 udp_whitelist 从 IP 层控制 UDP 数据是否需要舍弃；如舍弃，则该 UDP 请求不会进入规则模块以及策略模块，TCP/UDP 请求记录中也不会有相应的条目，但仍可在日志中查询到相关信息（日志等级 debug）。
# 该参数控制的是流入 Quantumult X Tunnel 的请求，并非 Quantumult X Tunnel 发出的请求，即不会作用于节点所使用的 UDP 目标端口。
;udp_whitelist=53, 123, 1900, 80-443

# 说明：参数 fallback_udp_policy 的值仅支持末端策略（末端策略为经由规则模块和策略模块后所命中的策略，例如：direct、reject 以及节点；不支持内置策略 proxy 以及其它自定义策略）。默认为 reject。
# 当 UDP 请求经过规则模块以及策略模块后所命中的节点为 Quantumult X 所不支持 UDP 转发的节点（如：VMess、trojan），或支持 UDP 转发但未注明 udp-relay=true 的（例如：SS/SSR 且与服务器是否真实开启 UDP 转发无关），则 fallback_udp_policy 会被使用。
# 注意：如果您需要调整该参数的值为 direct，请务必清楚了解同一目标主机名 TCP 请求与 UDP 请求的源地址不同所造成的隐私及安全风险。
fallback_udp_policy=direct

;icmp_auto_reply=true

[dns]
##### 参考：https://github.com/VirgilClyne/GetSomeFries/wiki/%F0%9F%8C%90-DNS
prefer-doh3

# --- CUSTOM HOSTS ---
# > IPv6
address = /ip6-localhost/[::1]
address = /ip6-loopback/[::1]
address = /ip6-localnet/[fe00::0]
address = /ip6-mcastprefix/[ff00::0]
address = /ip6-allnodes/[ff02::1]
address = /ip6-allrouters/[ff02::2]
address = /ip6-allhosts/[ff02::3]

# > Encrypted DNS
address = /dns.google/8.8.8.8
address = /dns64.dns.google/[2001:4860:4860::6464]
address = /cloudflare-dns.com/104.16.249.249
address = /1dot1dot1dot1.cloudflare-dns.com/1.1.1.1
address = /one.one.one.one/1.1.1.1
address = /dns.alidns.com/223.5.5.5
address = /doh.pub/1.12.12.12
address = /dot.pub/1.12.12.12
address = /doh.360.cn/23.6.48.18
address = /dot.360.cn/101.198.198.198
address = /dns.twnic.tw/101.101.101.101
address = /ordns.he.net/74.82.42.42

# > Modify Contents
# Google API Services China
# address = /services.googleapis.cn/74.125.193.94
# Firebase Cloud Messaging
address = /talk.google.com/108.177.125.188
address = /mtalk.google.com/108.177.125.188
address = /alt1-mtalk.google.com/3.3.3.3
address = /alt2-mtalk.google.com/3.3.3.3
address = /alt3-mtalk.google.com/74.125.200.188
address = /alt4-mtalk.google.com/74.125.200.188
address = /alt5-mtalk.google.com/3.3.3.3
address = /alt6-mtalk.google.com/3.3.3.3
address = /alt7-mtalk.google.com/74.125.200.188
address = /alt8-mtalk.google.com/3.3.3.3
# Google CDN
# address = /dl.google.com/180.163.151.161
# address = /dl.l.google.com/180.163.151.161

# --- CUSTOM DNS ---
# > Modify Contents
# Google CDN
doh-server = /blog.google/https://doh.pub/dns-query
doh-server = /googletraveladservices.com/https://doh.pub/dns-query
doh-server = /dl.google.com/https://doh.pub/dns-query
doh-server = /dl.l.google.com/https://doh.pub/dns-query
doh-server = /clientservices.googleapis.com/https://doh.pub/dns-query
doh-server = /update.googleapis.com/https://doh.pub/dns-query
doh-server = /translate.googleapis.com/https://doh.pub/dns-query
doh-server = /fonts.googleapis.com/https://doh.pub/dns-query
doh-server = /fonts.gstatic.com/https://doh.pub/dns-query
# Google STUN
server = /stun.l.google.com/system
server = /stun?.l.google.com/system

# > Router Admin Panel
# Ubiquiti Unifi Network App
server = /*.id.ui.direct/system
# Ubiquiti Unifi Portal
# server = /unifi.ui.com/system
# Ubiquiti Unifi OS
server = /unifi.local/system
# Ubiquiti Unifi Controller
# server = /network.unifi.ui.com/system
# Ubiquiti Amplifi Router
server = /amplifi.lan/system
# Synology Router
server = /router.synology.com/system
# Razer Sila Router
server = /sila.razer.com/system
# Asus Router
server = /router.asus.com/system
# Netgear Router
server = /routerlogin.net/system
# Netgear Obri Router
server = /orbilogin.com/system
# Linksys Router
server = /www.LinksysSmartWiFi.com/system
server = /LinksysSmartWiFi.com/system
server = /myrouter.local/system
# Aurba Router
server = /instant.arubanetworks.com/system
server = /setmeup.arubanetworks.com/system
# 小米 Mi WiFi Router
server = /www.miwifi.com/system
server = /miwifi.com/system
# 华为 Huawei Router
server = /mediarouter.home/system
# TP-Link Router
server = /tplogin.cn/system
server = /tplinklogin.net/system
server = /tplinkwifi.net/system
# 水星 MERCURY Router
server = /melogin.cn/system
# 迅捷 FAST Router
server = /falogin.cn/system
# 腾达 Tenda Router
server = /tendawifi.com/system
# 磊科 Netcore Router
server = /leike.cc/system
# 中兴 ZTE Router
server = /zte.home/system
# 斐讯 PHICOMM Router
server = /p.to/system
server = /phicomm.me/system
# 极路由 HiWiFi Router
server = /hiwifi.com/system
# 迅雷路由
server = /peiluyou.com/system
# M2M routers at MiFi Hotspot
server = /_hotspot_.m2m/system
# csl Wi-Fi
server = /hotspot.cslwifi.com/system

# > Apple
# refer: https://support.apple.com/zh-cn/HT210060
doh-server = /networking.apple/https://doh.dns.apple.com/dns-query
# Apple.com
# doh-server = /*.apple.com/https://doh.dns.apple.com/dns-query
# iCloud.com
doh-server = /*.icloud.com/https://doh.dns.apple.com/dns-query

# > Alphabet
# refer: https://developers.google.com/speed/public-dns/docs/doh?hl=zh-cn
# doh-server = /*.google/https://dns.google/dns-query
doh-server = /*.google.com/https://dns.google/dns-query
doh-server = /*.google.com.??/https://dns.google/dns-query
# Google sites
# doh-server = /*.goog/https://dns.google/dns-query
# Google 静态资源
doh-server = /*.gstatic.com/https://dns.google/dns-query
# Google Photos
doh-server = /*.ggpht.com/https://dns.google/dns-query
# Google 用户上传数据
doh-server = /*.googleusercontent.com/https://dns.google/dns-query
# Google APIs
# doh-server = /*.googleapis.com/https://dns.google/dns-query
# Google backbone
doh-server = /*.1e100.net/https://dns.google/dns-query
# Youtube sites
doh-server = /*.youtube/https://dns.google/dns-query
# Youtube
doh-server = /*.youtube.com/https://dns.google/dns-query
# Youtube 图片
doh-server = /*.ytimg.com/https://dns.google/dns-query
# Youtube Video
doh-server = /*.googlevideo.com/https://dns.google/dns-query
# Google Video Thumbnails
doh-server = /*.gvt?.com/https://dns.google/dns-query
# reCaptcha
doh-server = /*.recaptcha.net/https://dns.google/dns-query
# Gmail
doh-server = /*.gmail.com/https://dns.google/dns-query
# Google Source
doh-server = /*.googlesource.com/https://dns.google/dns-query
# Google AD Services
doh-server = /*.googleadservices.com/https://dns.google/dns-query
# DoubleClick
doh-server = /*.doubleclick.net/https://dns.google/dns-query
# AdSense
doh-server = /*.adsense.com/https://dns.google/dns-query
# AdSense Custom Search Ads
doh-server = /*.adsensecustomsearchads.com/https://dns.google/dns-query
# AdSense for mobile apps
doh-server = /*.adsenseformobileapps.com/https://dns.google/dns-query
# Google shortened URLs
doh-server = /*.gle/https://dns.google/dns-query
# Google URL Shortener
doh-server = /goo.gl/https://dns.google/dns-query

# > Cloudflare
# refer: https://developers.cloudflare.com/1.1.1.1/encryption/dns-over-https/make-api-requests/
doh-server = /*.cloudflare.com/https://cloudflare-dns.com/dns-query
# Cloudflare Stream
doh-server = /*.cloudflarestream.com/https://cloudflare-dns.com/dns-query
# Cloudflare Client
doh-server = /*.cloudflareclient.com/https://cloudflare-dns.com/dns-query
# Cloudflare Web Analytics
doh-server = /*.cloudflareinsights.com/https://cloudflare-dns.com/dns-query
# Cloudflare 1.1.1.1
doh-server = /*.every1dns.net/https://cloudflare-dns.com/dns-query
# Cloudflare SSL Certificate
# doh-server = /*.cloudflaressl.com/https://cloudflare-dns.com/dns-query
# Cloudflare DNS
doh-server = /*.cloudflare-dns.com/https://cloudflare-dns.com/dns-query
# CloudFlare Workers
doh-server = /*.workers.dev/https://cloudflare-dns.com/dns-query

# > 阿里巴巴
# refer: https://www.alidns.com
doh-server = /*.alibaba.cn/https://dns.alidns.com/dns-query
doh-server = /*.alibaba.com.cn/https://dns.alidns.com/dns-query
# Alibaba 中国
doh-server = /*.china.alibaba.com/https://dns.alidns.com/dns-query
# 1688
doh-server = /*.1688.com/https://dns.alidns.com/dns-query
# 淘宝
doh-server = /*.taobao.com/https://dns.alidns.com/dns-query
# 淘宝 缓存
doh-server = /*.tbcache.com/https://dns.alidns.com/dns-query
# 天猫
doh-server = /*.tmall.com/https://dns.alidns.com/dns-query
# 阿里 CDN
doh-server = /*.alicdn.com/https://dns.alidns.com/dns-query
# 阿里昆仑
doh-server = /*.alikunlun.com/https://dns.alidns.com/dns-query
# 云引擎应用平台
doh-server = /*.aliapp.com/https://dns.alidns.com/dns-query
# 上云平台
doh-server = /*.aliapp.org/https://dns.alidns.com/dns-query
# 阿里用户上传资料
doh-server = /*.alibabausercontent.com/https://dns.alidns.com/dns-query
# mmstat 数据统计 广告追踪
doh-server = /*.mmstat.com/https://dns.alidns.com/dns-query
# 淘宝短网址
doh-server = /tb.cn/https://dns.alidns.com/dns-query

# > 阿里云
# refer: https://www.alidns.com
# 阿里云
doh-server = /*.aliyun.*/https://dns.alidns.com/dns-query
# 阿里云 CDN
doh-server = /*.aliyuncdn.*/https://dns.alidns.com/dns-query
# 阿里云 API 服务
doh-server = /*.aliyuncs.com/https://dns.alidns.com/dns-query
# 阿里云 DDoS防护
doh-server = /*.aliyunddos????.com/https://dns.alidns.com/dns-query
# 阿里云盘
doh-server = /*.aliyundrive.com/https://dns.alidns.com/dns-query
# 阿里云盾
doh-server = /*.aliyundun.com/https://dns.alidns.com/dns-query
# 阿里云盾 Web 应用防火墙
doh-server = /*.aliyundunwaf.com/https://dns.alidns.com/dns-query
# 阿里云 内部
doh-server = /*.aliyun-inc.com/https://dns.alidns.com/dns-query

# > 蚂蚁集团
# refer: https://www.alidns.com
doh-server = /*.antgroup.com/https://dns.alidns.com/dns-query
# 蚂蚁金服
doh-server = /*.antfin.com/https://dns.alidns.com/dns-query
# 蚂蚁金服
doh-server = /*.antfinancial.com/https://dns.alidns.com/dns-query
# 支付宝
doh-server = /*.alipay.com/https://dns.alidns.com/dns-query
doh-server = /*.alipay.com.cn/https://dns.alidns.com/dns-query
# 支付宝 HTTP DNS
doh-server = /*.alipaydns.com/https://dns.alidns.com/dns-query
# 支付宝 商家资源
doh-server = /*.alipayeshop.com/https://dns.alidns.com/dns-query
# 支付宝 Mdap
doh-server = /*.alipaylog.com/https://dns.alidns.com/dns-query
# 支付宝 静态资源
doh-server = /*.alipayobjects.com/https://dns.alidns.com/dns-query
# 支付宝 开放技术生态体系
doh-server = /*.alipay-eco.com/https://dns.alidns.com/dns-query

# > 腾讯
# refer: https://www.dnspod.cn/products/publicdns
doh-server = /*.tencent.com/https://doh.pub/dns-query
# 腾讯云
doh-server = /*.qcloud.com/https://doh.pub/dns-query
# 腾讯云CDN
doh-server = /*.qcloudcdn.cn/https://doh.pub/dns-query
doh-server = /*.qcloudcdn.com/https://doh.pub/dns-query
# 腾讯云对象储存
doh-server = /*.qcloudcos.com/https://doh.pub/dns-query
# 腾讯云静态资源
doh-server = /*.qcloudimg.com/https://doh.pub/dns-query
# 腾讯云超级管家
doh-server = /*.qcloudcjgj.com/https://doh.pub/dns-query
# 腾讯云网站管家
doh-server = /*.qcloudwzgj.com/https://doh.pub/dns-query
# 腾讯云主页管家
doh-server = /*.qcloudzygj.com/https://doh.pub/dns-query
# 腾讯开放云
doh-server = /*.myqcloud.com/https://doh.pub/dns-query
# 腾讯云
doh-server = /*.tencent-cloud.net/https://doh.pub/dns-query
# 腾讯云aiot解决方案
doh-server = /*.tencentcloud-aiot.com/https://doh.pub/dns-query
# 腾讯云API
doh-server = /*.tencentcloudapi.com/https://doh.pub/dns-query
# 腾讯云容器镜像服务TCR
doh-server = /*.tencentcloudcr.com/https://doh.pub/dns-query
# 腾讯云云市场
doh-server = /*.tencentcloudmarket.com/https://doh.pub/dns-query
# QQ
doh-server = /*.qq.com/https://doh.pub/dns-query
# 腾讯头像
doh-server = /*.qlogo.cn/https://doh.pub/dns-query
# 腾讯图片
doh-server = /*.qpic.cn/https://doh.pub/dns-query
# 微信
doh-server = /*.weixin.qq.com/https://doh.pub/dns-query
doh-server = /*.wx.qq.com/https://doh.pub/dns-query
doh-server = /*.weixin.com/https://doh.pub/dns-query
# 微信公众平台
doh-server = /*.weixinbridge.com/https://doh.pub/dns-query
# WeChat
doh-server = /*.wechat.com/https://doh.pub/dns-query
# 微信小程序
doh-server = /*.servicewechat.com/https://doh.pub/dns-query
# 微云
doh-server = /*.weiyun.com/https://doh.pub/dns-query
# 腾讯 图片 静态资源
doh-server = /*.gtimg.cn/https://doh.pub/dns-query
doh-server = /*.idqqimg.com/https://doh.pub/dns-query
# 腾讯 静态资源 CDN
doh-server = /*.cdn-go.cn/https://doh.pub/dns-query
# 腾讯云 智能云解析DNS
doh-server = /*.smtcdns.com/https://doh.pub/dns-query
doh-server = /*.smtcdns.net/https://doh.pub/dns-query
# 腾讯短网址
doh-server = /url.cn/https://doh.pub/dns-query

# > 百度
# refer: https://dudns.baidu.com/support/localdns/Address/index.html
server = /*.baidu/180.76.76.76
server = /*.baidu.com/180.76.76.76
# 百度 静态资源
server = /*.bdimg.com/180.76.76.76
server = /*.bdstatic.com/180.76.76.76
# 百度网盘
server = /*.baidupcs.*/180.76.76.76
# 百度云CDN
server = /*.baiduyuncdn.*/180.76.76.76
# 百度云DNS
server = /*.baiduyundns.*/180.76.76.76
# 百度云 DNS
server = /*.bdydns.*/180.76.76.76
# 百度云 CDN
server = /*.bdycdn.*/180.76.76.76
# 百度云 域名
server = /*.bdysite.com/180.76.76.76
server = /*.bdysites.com/180.76.76.76
# 百度智能云
server = /*.baidubce.*/180.76.76.76
# 百度智能云 DNS
server = /*.bcedns.*/180.76.76.76
# 百度智能云 对象存储BOS
server = /*.bcebos.com/180.76.76.76
# 百度智能云 播放器服务
server = /*.bcevod.com/180.76.76.76
# 百度智能云 图片服务
server = /*.bceimg.com/180.76.76.76
# 百度智能云 主机
server = /*.bcehost.com/180.76.76.76
server = /*.bcehosts.com/180.76.76.76
# 百度短网址
server = /dwz.cn/180.76.76.76

# > 360
# refer: https://sdns.360.net/dnsPublic.html#course
# 360安全中心
doh-server = /*.360.cn/https://doh.360.cn/dns-query
# 360安全卫士
doh-server = /*.360safe.com/https://doh.360.cn/dns-query
# 360快资讯
doh-server = /*.360kuai.com/https://doh.360.cn/dns-query
# 360搜索
doh-server = /*.so.com/https://doh.360.cn/dns-query
# 360网页快照服务
doh-server = /*.360webcache.com/https://doh.360.cn/dns-query
# 奇虎api
doh-server = /*.qihuapi.com/https://doh.360.cn/dns-query
# 360图床
doh-server = /*.qhimg.com/https://doh.360.cn/dns-query
doh-server = /*.qhimgs.com/https://doh.360.cn/dns-query
doh-server = /*.qhimgs?.com/https://doh.360.cn/dns-query
# 360
doh-server = /*.qhmsg.com/https://doh.360.cn/dns-query
# 奇虎静态资源
doh-server = /*.qhres.com/https://doh.360.cn/dns-query
doh-server = /*.qhres?.com/https://doh.360.cn/dns-query
# 导航静态文件
doh-server = /*.dhrest.com/https://doh.360.cn/dns-query
# 360
doh-server = /*.qhupdate.com/https://doh.360.cn/dns-query
# 360安全云盘
doh-server = /*.yunpan.cn/https://doh.360.cn/dns-query
doh-server = /*.yunpan.com.cn/https://doh.360.cn/dns-query
doh-server = /*.yunpan.com/https://doh.360.cn/dns-query
# 360短网址
doh-server = /urlqh.cn/https://doh.360.cn/dns-query

# > Bytedance
# refer: https://www.volcengine.com/docs/6758/179060
# 艾特迷
server = /*.amemv.com/180.184.1.1
# 西瓜 图片服务
server = /*.bdxiguaimg.com/180.184.1.1
# 西瓜 静态资源
server = /*.bdxiguastatic.com/180.184.1.1
# 字节跳动 UNPKG
server = /*.byted-static.com/180.184.1.1
# 字节跳动
server = /*.bytedance.*/180.184.1.1
# 字节跳动 DNS
server = /*.bytedns.net/180.184.1.1
# 字节跳动 CDN 文件存储
server = /*.bytednsdoc.com/180.184.1.1
# 字节跳动 Goofy
server = /*.bytegoofy.com/180.184.1.1
# 字节跳动 图片服务
server = /*.byteimg.com/180.184.1.1
# 字节跳动 SCM
server = /*.bytescm.com/180.184.1.1
# 字节跳动 TOS
server = /*.bytetos.com/180.184.1.1
# 飞书企业服务平台
server = /*.bytexservice.com/180.184.1.1
# 抖音
server = /*.douyin.com/180.184.1.1
# 抖音 静态资源
server = /*.douyinpic.com/180.184.1.1
# 抖音 静态资源
server = /*.douyinstatic.com/180.184.1.1
# 抖音 静态资源
server = /*.douyinvod.com/180.184.1.1
# FeelGood平台
server = /*.feelgood.cn/180.184.1.1
# 飞聊官网
server = /*.feiliao.com/180.184.1.1
# 快手
server = /*.gifshow.com/180.184.1.1
# 火山网
server = /*.huoshan.com/180.184.1.1
# 火山直播
server = /*.huoshanzhibo.com/180.184.1.1
# 抖音 dapm
server = /*.ibytedapm.com/180.184.1.1
# 抖音 CDN
server = /*.iesdouyin.com/180.184.1.1
# 西瓜视频
server = /*.ixigua.com/180.184.1.1
# 快手
server = /*.kspkg.com/180.184.1.1
# 抖音 静态资源
server = /*.pstatp.com/180.184.1.1
# 今日头条
server = /*.snssdk.com/180.184.1.1
# 今日头条
server = /*.toutiao.com/180.184.1.1
# 今日头条
server = /*.toutiao13.com/180.184.1.1
# 今日头条 静态资源
server = /*.toutiao???.???/180.184.1.1
# 头条云
server = /*.toutiaocloud.cn/180.184.1.1
# 头条云
server = /*.toutiaocloud.com/180.184.1.1
# 今日头条 建站
server = /*.toutiaopage.com/180.184.1.1
# 悟空
server = /*.wukong.com/180.184.1.1
# 字节跳动 API
server = /*.zijieapi.com/180.184.1.1
# 字节跳动 图片服务
server = /*.zijieimg.com/180.184.1.1
# 今日头条 网页版
server = /*.zjbyte.com/180.184.1.1
# 字节跳动 CDN
server = /*.zjcdn.com/180.184.1.1

# > BiliBili
server = /*.bilibili.com/system
# BiliBili API
server = /*.biliapi.com/system
server = /*.biliapi.net/system
# BiliBili CDN
server = /*.bilicdn?.com/system
# BiliBili 静态资源
server = /*.hdslb.com/system
server = /*.hdslb.net/system
# BiliBili 视频
server = /cn-hk-eq-bcache-??.bilivideo.com/system
# BiliBili upos视频服务器（akamai）
server = /upos-hz-mirrorakam.akamaized.net/system
# BiliBili upos视频服务器（asia-abroad.com）
server = /upos-sz-mirrorasiaov.bilibilivideo.com/system
# BiliBili upos视频服务器（阿里云）
doh-server = /upos-sz-mirrorali.bilivideo.com/https://dns.alidns.com/dns-query
doh-server = /upos-sz-mirrorali?.bilivideo.com/https://dns.alidns.com/dns-query
doh-server = /upos-sz-mirrorali??.bilivideo.com/https://dns.alidns.com/dns-query
# BiliBili upos视频服务器（百度云）
server = /upos-sz-mirrorbos.bilivideo.com/180.76.76.76
# BiliBili upos视频服务器（腾讯云）
doh-server = /upos-sz-mirrorcos.bilivideo.com/https://doh.pub/dns-query
doh-server = /upos-sz-mirrorcos?.bilivideo.com/https://doh.pub/dns-query
doh-server = /upos-sz-mirrorcos??.bilivideo.com/https://doh.pub/dns-query
# BiliBili upos视频服务器（华为云）
server = /upos-sz-mirrorhw.bilivideo.com/system
server = /upos-sz-mirrorhw?.bilivideo.com/system
server = /upos-sz-mirrorhwo?.bilivideo.com/system
# BiliBili upos视频服务器（金山云）
server = /upos-sz-mirrorks3.bilivideo.com/system
server = /upos-sz-mirrorks3?.bilivideo.com/system
# BiliBili upos视频服务器（七牛云）
server = /upos-sz-mirrorkodo.bilivideo.com/system
server = /upos-sz-mirrorkodo?.bilivideo.com/system
# BiliBili upos视频服务器（网宿）
server = /upos-sz-mirrorwcs.bilivideo.com/system
server = /upos-sz-mirrorwcs?.bilivideo.com/system
# BiliBili upos视频服务器（迅雷）
server = /upos-sz-mirrorxycdn.bilivideo.com/system
# BiliBili upos视频服务器（百度云）
server = /upos-sz-upcdnbd??.bilivideo.com/180.76.76.76
# BiliBili upos视频服务器
server = /upos-sz-upcdnhw.bilivideo.com/system
# BiliBili upos视频服务器（腾讯云）
doh-server = /upos-sz-upcdntx.bilivideo.com/https://doh.pub/dns-query
# BiliBili upos视频服务器
server = /upos-sz-upcdnws.bilivideo.com/system
server = /upos-tf-all-js.bilivideo.com/system
# BiliBili mCDN视频服务器
server = /*.mcdn.bilivideo.com/system
# BiliBili 视频
server = /*.bilivideo.com/system
server = /*.bilivideo.cn/system
# BiliBili短网址
server = /acg.tv/system

# > 京东
server = /*.jd.com/system
# 京东 静态资源
server = /*.360buyimg.com/system
# 京东云
server = /*.jdcloud.com/system
# 京东云 缓存和存储
server = /*.jcloudstatic.com/system
# 京东云 静态资源
server = /*.jcloudstatic.net/system
# 京东云 全局负载均衡
server = /*.jdgslb.com/system
# 京东短网址
server = /3.cn/system

# > 🇨🇳 CHN
# CNNIC SDNS
# 中国政府网
# server = /*.gov.cn/1.2.4.8
# server = /*.政务/1.2.4.8

# > 🇭🇰 HKG
# PCCW Enterprises Limited
# server = /*.pccw.com/dns1.pccw.com
# 1O1O
# server = /*.1010.com.hk/dns1.pccw.com
# csl.
# server = /*.hkcsl.com/dns1.pccw.com
# The CLUB by HKT
# server = /*.theclub.com.hk/dns1.pccw.com
# now.com
# server = /*.now.com/dns2.pccw.com
# Now E
# server = /*.nowe.com/dns2.pccw.com
# Now TV
# server = /*.now-tv.com/dns2.pccw.com
# MOOV
# server = /*.moov.hk/dns3.pccw.com
# viu
# server = /*.viu.com/dns3.pccw.com
# viu tv
# server = /*.viu.tv/dns3.pccw.com
# Hong Kong Cable Television Limited
# server = /*.hkcable.com.hk/dns1.hkcable.com.hk
# i-CABLE
# server = /*.i-cable.com/dns2.hkcable.com.hk
# CABLE TV Service
# server = /*.cabletv.com.hk/dns2.hkcable.com.hk
# KDDI Hong Kong Limited
# server = /*.hk.kddi.com/apple.kdd.net.hk

# > 🇹🇼 TWN
# 中华电信
doh-server = /*.cht.com.tw/https://dns.hinet.net/dns-query
# 中华电信HiNet
doh-server = /*.hinet.net/https://dns.hinet.net/dns-query
# 中华电信emome
doh-server = /*.emome.net/https://dns.hinet.net/dns-query
# So-net Entertainment Taiwan
# server = /*.so-net.net.tw/ns1.so-net.net.tw
# server = /*.so-net.tw/ns1.so-net.net.tw
# Taiwan Network Information Center
doh-server = /*.tw/https://dns.twnic.tw/dns-query
doh-server = /*.taipei/https://dns.twnic.tw/dns-query

# > 🇺🇸 USA
# Hurricane Electric
doh-server = /*.he.net/https://ordns.he.net/dns-query
##### End 参考

# 查询结果只用于评估过滤器或通过直接策略连接，当通过服务器连接时，查询结果不会被使用，Quantumult 永远不会知道相关域名的目标 IP。
# 如果您想让某个域名(例如：example.com)为 127.0.0.0.1，只需在「filter_local」部分添加「host, example.com, reject」即可。拒绝操作将返回 127.0.0.0.1 的 DNS 响应。

# 禁用系统 DNS
# 为了提高性能，会使用从当前网络(系统)中获取的 DNS 服务器(您可以使用「no-system」禁用此功能，但至少要增加一个自定义的 DNS 服务器。
;no-system

# 禁用 IPv6
# 当设置「no-ipv6」时，Quanumult X Tunnel 的 DNS 模块会直接让 AAAA 查询失败。
no-ipv6

# 自定义 DNS
# > DNSPod Public DNS
server=119.29.29.29
# > Alibaba Public DNS
server=223.5.5.5
server=223.6.6.6
server=114.114.114.114
;server=202.141.176.93
;server=202.141.178.13
;server=117.50.10.10
server=119.28.28.28

# 在特定的网络环境下忽略自定义 DNS 可在后方加上「excluded_ssids」相关字段。
# 注意：如配置了 no-system，则请务必确保在忽略了部分自定义 DNS 的配置下至少有一个可用的自定义 DNS 配置。
# server=114.114.114.114, excluded_ssids=SSID1, SSID2

# DNS over HTTPS
# 当 DoH 服务器被设置时，所有其他普通的（没有与之相关的特定域）服务器将被忽略。
# 当设置了多个 DoH 服务器时，只有第一个会被使用。
# 当使用的 DoH 服务器不是基于 HTTP/2 时，DoH 将被暂时禁用，并使用常规服务器，直到下次启动 VPN 连接。
# 不建议在与防火墙相关的网络环境中使用，不确定 DoH 服务器是否总能被到达。
# 如果 DoH 服务器在您的国家或地区不是流行的 DNS 服务器，则不推荐使用，它可能会丢失 ISP DNS 服务器返回的 CDN 优化结果。
# 如果 DoH 服务器是一个反广告相关的服务器，则不推荐使用（Quantumult X 过滤模块对于被拒绝的域具有更好的性能，它可以避免客户端无休止的请求）。
;doh-server=https://dns.alidns.com/dns-query
;doh-server=https://223.6.6.6/dns-query

# 本地 DNS 映射
# Firebase Cloud Messaging
;address=/mtalk.google.com/108.177.125.188
# Google Dl
;server=/dl.google.com/119.29.29.29
;server=/dl.l.google.com/119.29.29.29

# TP-Link
server=/tplogin.cn/system
server=/tplinklogin.net/system
server=/melogin.cn/system
server=/falogin.cn/system

;server=8.8.4.4:53
;server=/example0.com/system
;server=/example1.com/8.8.4.4
;server=/*.example2.com/223.5.5.5
;server=/example4.com/[2001:4860:4860::8888]:53
;address=/example5.com/192.168.16.18
;address=/example6.com/[2001:8d3:8d3:8d3:8d3:8d3:8d3:8d3]
;server=8.8.4.4:53
;server=8.8.8.8:53
;server=1.1.1.1:53
;server=208.67.222.222:53
;server=208.67.220.220:53


[policy]
#
# 需要策略图标的在策略后加上：img-url=http://example.com/icon.png
#

# 类型：静态(static)
# 指向您手动选择的候选服务器。
;static=policy-name-1, Sample-A, Sample-B, Sample-C, img-url=http://example.com/icon.png

# 类型：可用(available)
# 指向候选服务器的第一个可用服务器(当策略被触发且策略结果不可用时，将立即启动并发 url 延迟测试。
# 如果当时没有网络请求接受策略，这意味着策略处于空闲状态，即使服务器关闭，测试也不会启动。那时，您可以通过手动启动测试来更新服务器状态，但是这没有任何意义)。
;available=policy-name-2, Sample-A, Sample-B, Sample-C

# 类型：负载均衡(round-robin)
# 指向在候选服务器中指向下一个服务器以进行下一次连接。
;round-robin=policy-name-3, Sample-A, Sample-B, Sample-C

# 类型：延迟测试(url-latency-benchmark)
# 策略指向具有最佳 URL 延迟(公差，单位毫秒)结果的服务器。
# 当用户在 Quantumult X 中手动启动 URL 测试时，策略结果也会被更新。
# 该类型的策略有一个名为 check-interval(秒) 的参数，如果此策略已经被任何请求激活，则将考虑该间隔。
;url-latency-benchmark=policy-name-8, resource-tag-regex=^sample, server-tag-regex=^example, check-interval=600, tolerance=0

# SSID
# 策略根据网络环境的不同指向服务器。
;ssid=policy-name-4, Sample-A, Sample-B, LINK_22E171:Sample-B, LINK_22E172:Sample-C

# resource-tag-regex 及 server-tag-regex 仅适用于 static、available 和 round-robin 类型的策略。
;static=policy-name-5, resource-tag-regex=^sample, server-tag-regex=^example, img-url=http://example.com/icon.png
;available=policy-name-6, resource-tag-regex=^sample, server-tag-regex=^example
;round-robin=policy-name-7, resource-tag-regex=^sample, server-tag-regex=^example

static=MyPolicy, proxy, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Static.png

static=MyFilters, MyPolicy, direct, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Puzzle.png
static=MyFiltersDirect, direct, MyPolicy, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Puzzle.png
static=Final, MyPolicy, direct, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Final.png
static=Streaming, MyPolicy, direct, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Streaming.png
static=StreamingSE, direct, MyPolicy, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/StreamingSE.png
static=Guard, reject, direct, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Hijacking.png
static=Apple, MyPolicy, direct, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Apple.png

[server_remote]
#
# 参数「tag」和「enabled」是可选的。
# 各种远程资源的默认同步时间间隔是 86400 秒。
# 你可以设置 update-interval=172800 来自定义你的自动同步时间间隔(秒)，负数表示禁用自动同步。
#
#Insert sub URL 1 here##rename=1X-@1x+2X-@2x+4X-@4x+BGP-HK-@️港+BGP-TW-@台+BGP-JP-@日+BGP-SG-@新+BGP-US-@美+BGP-UK@英&sort=港>新>台>日>美>英&emoji=2&ntf=1&info=1&tfo=1&tls13=1, tag=✈️魅影极速, update-interval=86400, opt-parser=true, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Airport.png, enabled=true

#Insert sub URL 2 here##rename=Premium|@❤️+Standard|@🉑&sort=港>新>台>日>美&emoji=2&ntf=1&info=1&tfo=1&tls13=1&regout=rc4-md5, tag=✈️忍者云, update-interval=86400, opt-parser=true, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Airport.png, enabled=true

#支持本地/iCloud的节点文件，位于Quantumult X/Profiles路径下
servers.txt, tag=非订阅节点, opt-parser=true, enabled=true

[filter_remote]
#
# 参数「tag」、「force-policy」和「enabled」是可选的。
# 当有强制策略时，远程资源的过滤器中的策略将被忽略，并使用强制策略。
#

# My filters
https://raw.githubusercontent.com/kailiu42/shenjiguize/master/Quantumult/Filter/MyFilters.list, tag=🔂MyFilters, update-interval=86400, enabled=true
# My filters Direct
https://raw.githubusercontent.com/kailiu42/shenjiguize/master/Quantumult/Filter/MyFiltersDirect.list, tag=🔂MyFiltersDirect, update-interval=86400, enabled=true

# Unbreak 后续规则修正
# https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Unbreak.list, tag=🔂Unbreak, force-policy=direct, update-interval=86400, opt-parser=true, enabled=true
# Advertising 广告
# https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Guard/Advertising.list, tag=🛡Advertising, force-policy=Guard, update-interval=86400, opt-parser=true, enabled=true
# https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Guard/AdvertisingPlus.list#type=domain-set, tag=🛡Advertising+, force-policy=Guard, update-interval=86400, opt-parser=true, enabled=true
# Privacy 隐私
# https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Guard/Privacy.list, tag=🛡️Privacy, force-policy=Guard, update-interval=86400, opt-parser=true, enabled=true
# Hijacking 运营商劫持或恶意网站
# https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Guard/Hijacking.list, tag=🛡️Hijacking, force-policy=Guard, update-interval=86400, opt-parser=true, enabled=true
# Streaming 国际流媒体服务
# https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/StreamingMedia/Streaming.list, tag=🎞Streaming, force-policy=Streaming, update-interval=86400, opt-parser=true, enabled=true
# StreamingSE 中国流媒体服务(面向海外版本)
# https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/StreamingMedia/StreamingSE.list, tag=🎞StreamingSE, force-policy=StreamingSE, update-interval=86400, opt-parser=true, enabled=true
# Global 全球加速
# https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Global.list, tag=🇺🇳Global, force-policy=MyFilters, update-interval=86400, opt-parser=true, enabled=true
# China 中国直连
# https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/China.list, tag=🇨🇳China, force-policy=direct, update-interval=86400, opt-parser=true, enabled=true
# IPList for China
# https://raw.githubusercontent.com/17mon/china_ip_list/master/china_ip_list.txt#type=rule, tag=🇨🇳ChinaIPv4, force-policy=direct, update-interval=86400, opt-parser=true, enabled=true
# https://gaoyifan.github.io/china-operator-ip/chinanet6.txt#type=rule, tag=🇨🇳ChinaIPv6, force-policy=direct, update-interval=86400, opt-parser=true, enabled=false

# 1. Advertising.list - 广告、行为分析、隐私追踪（macOS 不建议开启）
https://cdn.jsdelivr.net/gh/sve1r/Rules-For-Quantumult-X@main/Rules/Advertising/AdReject.list, tag=Advertising, force-policy=Guard, enabled=true, update-interval=86400
# 2. Hijacking.list - 劫持（运营商、臭名昭著的诈骗网站或恶意应用）
https://cdn.jsdelivr.net/gh/sve1r/Rules-For-Quantumult-X@main/Rules/Advertising/Hijacking.list, tag=Hijacking, force-policy=Guard, enabled=true, update-interval=86400
# 3. ForeignMedia.list - 国际流媒体
https://cdn.jsdelivr.net/gh/sve1r/Rules-For-Quantumult-X@main/Rules/Media/ForeignMedia.list, tag=ForeignMedia, force-policy=Streaming, enabled=true, update-interval=86400
# 4. DomesticMedia.list - 国内流媒体（可不加）
https://cdn.jsdelivr.net/gh/sve1r/Rules-For-Quantumult-X@main/Rules/Media/DomesticMedia.list, tag=DomesticMedia, force-policy=StreamingSE, enabled=true, update-interval=86400
# Telegram, facebook etc. that explicitly needs proxy
https://cdn.jsdelivr.net/gh/sve1r/Rules-For-Quantumult-X@main/Rules/Services/Amazon.list, tag=Amazon, force-policy=MyFilters, enabled=true, update-interval=86400
https://cdn.jsdelivr.net/gh/sve1r/Rules-For-Quantumult-X@main/Rules/Services/Cloudflare.list, tag=Cloudflare, force-policy=MyFilters, enabled=true, update-interval=86400
https://cdn.jsdelivr.net/gh/sve1r/Rules-For-Quantumult-X@main/Rules/Services/Github.list, tag=Github, force-policy=MyFilters, enabled=true, update-interval=86400
https://cdn.jsdelivr.net/gh/sve1r/Rules-For-Quantumult-X@main/Rules/Services/Google.list, tag=Google, force-policy=MyFilters, enabled=true, update-interval=86400
https://cdn.jsdelivr.net/gh/sve1r/Rules-For-Quantumult-X@main/Rules/Services/OpenAI.list, tag=OpenAI, force-policy=MyFilters, enabled=true, update-interval=86400
https://cdn.jsdelivr.net/gh/sve1r/Rules-For-Quantumult-X@main/Rules/Services/Paypal.list, tag=Paypal, force-policy=MyFilters, enabled=true, update-interval=86400
https://cdn.jsdelivr.net/gh/sve1r/Rules-For-Quantumult-X@main/Rules/Services/SNS/Facebook.list, tag=Facebook, force-policy=MyFilters, enabled=true, update-interval=86400
https://cdn.jsdelivr.net/gh/sve1r/Rules-For-Quantumult-X@main/Rules/Services/SNS/Telegram.list, tag=Telegram, force-policy=MyFilters, enabled=true, update-interval=86400
https://cdn.jsdelivr.net/gh/sve1r/Rules-For-Quantumult-X@main/Rules/Services/SNS/Twitter.list, tag=Twitter, force-policy=MyFilters, enabled=true, update-interval=86400
https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/QuantumultX/LinkedIn/LinkedIn.list, tag=LinkedIn, force-policy=MyFilters, enabled=true, update-interval=86400
# 5. Global.list - 国际网站/应用
https://cdn.jsdelivr.net/gh/sve1r/Rules-For-Quantumult-X@main/Rules/Region/Global.list, tag=Global, force-policy=MyFilters, enabled=true, update-interval=86400
# 6. Apple.list - Apple 服务（可不加）
https://cdn.jsdelivr.net/gh/sve1r/Rules-For-Quantumult-X@main/Rules/Services/Apple.list, tag=Apple, force-policy=Apple, enabled=true, update-interval=86400
# 7. China.list - 国内网站/应用
https://cdn.jsdelivr.net/gh/sve1r/Rules-For-Quantumult-X@main/Rules/Region/China.list, tag=ChinaSite, force-policy=direct, enabled=true, update-interval=86400
#https://cdn.jsdelivr.net/gh/sve1r/Rules-For-Quantumult-X@main/Rules/Region/ChinaASN.list, tag=ChinaASN, force-policy=direct, enabled=true, update-interval=86400
https://cdn.jsdelivr.net/gh/sve1r/Rules-For-Quantumult-X@main/Rules/Region/ChinaIP.list, tag=ChinaIP, force-policy=direct, enabled=true, update-interval=86400

[rewrite_remote]
#
# 参数「tag」和「enabled」是可选的。
#
# General
# https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/General.conf, tag=🔀General, update-interval=86400, enabled=true
# Block Advertising
# https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/Block/Advertising.conf, tag=🛡Block Advertising, update-interval=86400, enabled=true
# Block Advertising+
# https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/Block/AdvertisingPlus.conf, tag=🛡Block Advertising+, update-interval=86400, enabled=true
# Block YouTube Ads
# https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/Block/YouTubeAds.conf, tag=🛡(<=16.43.2)不适用允许 UDP 转发的节点及 Premium, update-interval=86400, enabled=false

# 网页去广告
https://cdn.jsdelivr.net/gh/sve1r/Rules-For-Quantumult-X@main/Rewrite/AdBlock/WebAdBlock.adblock, tag=常用网页去广告, update-interval=86400, enabled=true
# 知乎去广告
https://cdn.jsdelivr.net/gh/sve1r/Rules-For-Quantumult-X@main/Rewrite/AdBlock/Zhihu.adblock, tag=知乎去广告, update-interval=86400, enabled=true
# 微博去广告
https://cdn.jsdelivr.net/gh/sve1r/Rules-For-Quantumult-X@main/Rewrite/AdBlock/Weibo.adblock, tag=微博去广告, update-interval=86400, enabled=true
# Youtube 去广告
https://cdn.jsdelivr.net/gh/sve1r/Rules-For-Quantumult-X@main/Rewrite/AdBlock/Youtube.adblock, tag=Youtube 去广告, update-interval=86400, enabled=true
# TestFlight复写
https://cdn.jsdelivr.net/gh/sve1r/Rules-For-Quantumult-X@main/Rewrite/Services/Apple/TestFlight/TestFlightDownload.conf,tag=TestFlight, update-interval=86400, enabled=true
# Rewrite 复写远程订阅
https://cdn.jsdelivr.net/gh/sve1r/Rules-For-Quantumult-X@main/Rewrite/Rewrite.conf, tag=Rewrite, update-interval=86400, enabled=true

[server_local]
#
# 只有 obfs=http, obfs=ws, obfs=ws, obfs=wss 可以有可选的「obfs-uri」字段。
# wss 中的 obfs-host 参数将用于 TLS 握手和 HTTP 头主机字段，如果没有为 wss 设置 obfs-host，则将使用服务器地址。
# 目前不支持 VMess 和 Trojan 的 UDP relay。
# 当使用 obfs=ws 和 obfs=wss 时，服务器端可以通过带有 mux=0 的 v2ray-plugin 或 v2ray-core 进行部署。
# obfs plugin tls1.2 ticket auth 比 tls1.2 ticket fastauth 和 obfs tls 多一个 RTT，你最好使用 tls1.2 ticket fastauth。
# chacha20-ietf-poly1305 和 chacha20-poly1305 在 VMess 配置中具有相同的效果。
#
# 可选字段 tls13 仅用于：shadowsocks obfs=wss / vmess obfs=over-tls and obfs=wss / http over-tls=true / trojan over-tls=true
# [server_local] 完整示例请查看「示例」

[filter_local]
# Local Area Network 局域网
host-suffix, local, direct
ip-cidr, 192.168.0.0/16, direct
ip-cidr, 10.0.0.0/8, direct
ip-cidr, 172.16.0.0/12, direct
ip-cidr, 127.0.0.0/8, direct
ip-cidr, 100.64.0.0/10, direct
ip-cidr, 224.0.0.0/4, direct
ip6-cidr, fe80::/10, direct

# GeoIP China(若启用，则禁用 ChinaIP.list)
-geoip, cn, direct

final, Final

[rewrite_local]
# [rewrite_local] 完整示例请查看「示例」

[task_local]
#
# $task.fetch() 组成一个 HTTP 请求并处理响应，只支持 text body。如果您想要 serial requests 而不是 current requests，可以将 $task.fetch() 嵌入到另一个 $task.fetch() 的完成处理程序中。
#
# 脚本应保存在本地「我的 iPhone - Quantumult X - Scripts」或「iCloud Drive - Quantumult X - Scripts」中。示例：https://github.com/crossutility/Quantumult-X/blob/master/sample-task.js
#
# 默认的 HTTP 请求超时是 10 秒。
#
# 支持 5 或 6 个 cron 字段，不包括命令字段。
#

# [task_local] 完整示例请查看「示例」
# 流媒体查询脚本
event-interaction https://cdn.jsdelivr.net/gh/KOP-XIAO/QuantumultX@master/Scripts/streaming-ui-check.js, tag = 流媒体 - 解锁查询，img-url=checkmark.seal.system, enabled=true

[http_backend]
#
# 部署一个本地 HTTP 服务器，并使用 JavaScript 进行数据处理。
# 输入变量为：$reqeust.url、$reqeust.path、$reqeust.headers、$reqeust.body。
# 使用 $done 输出像 $done({status:"HTTP/1.1 200 OK"}, headers:{}, body:"here is a string") 这样的返回响应。
# 此外，您还可以使用签名或任何其他验证方法来验证请求是否合法。
# 部署后您应该通过 http://127.0.0.1:9999/your-path/your-api/. 进行访问。服务器默认监听端口为 9999，您可以在UI中进行更改。
#
# [http_backend] 完整示例请查看「示例」

[mitm]
#
# 只有「hostname」中的 TLS SNI 或目标地址将被 MitM 处理。
#
# 默认情况下，当为 HTTPS 请求启用 MitM 时，Quantumult X 会从原站点获取证书（证书会被缓存），保留大部分需要的原始证书信息，并使用 MitM 的 root CA 重新签名，这是推荐的（也是比较兼容的）MitM 证书创建方式。
#
# 偶尔有些用户喜欢调试 HTTPS 请求，其域名不存在，所以原证书根本不存在。当参数 simple_cert_hostname 出现的时候。其 TLS SNI 名称在 simple_cert_hostname(及 hostname) 中的 HTTPS 请求将使用纯本地生成的 MitM 证书。
#
# 注意！！！您应该始终保护您的 CA 密码和 p12 的私密性。
#
;passphrase =
;p12 =
skip_validating_cert = true
;force_sni_domain_name = false
;simple_cert_hostname = non-existed-domain.com, *.non-connected-domain.com
;hostname = *.googlevideo.com
