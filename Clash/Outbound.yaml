# Port of HTTP(S) proxy server on the local end
# port: 7890

# Port of SOCKS5 proxy server on the local end
# socks-port: 7891

# Transparent proxy server port for Linux and macOS (Redirect TCP and TProxy UDP)
# redir-port: 7892

# Transparent proxy server port for Linux (TProxy TCP and TProxy UDP)
# tproxy-port: 7893

# HTTP(S) and SOCKS4(A)/SOCKS5 server on the same port
mixed-port: 7890

# authentication of local SOCKS5/HTTP(S) server
# authentication:
#  - "user1:pass1"
#  - "user2:pass2"

# Set to true to allow connections to the local-end server from
# other LAN IP addresses
allow-lan: false

# This is only applicable when `allow-lan` is `true`
# '*': bind all IP addresses
# 192.168.122.11: bind a single IPv4 address
# "[aaaa::a8aa:ff:fe09:57d8]": bind a single IPv6 address
bind-address: '*'

# Clash router working mode
# rule: rule-based packet routing
# global: all packets will be forwarded to a single endpoint
# direct: directly forward the packets to the Internet
mode: rule

# Clash by default prints logs to STDOUT
# info / warning / error / debug / silent
log-level: info

# When set to false, resolver won't translate hostnames to IPv6 addresses
ipv6: false

# RESTful web API listening address
external-controller: 127.0.0.1:9090

# A relative path to the configuration directory or an absolute path to a
# directory in which you put some static web resource. Clash core will then
# serve it at `${API}/ui`.
# external-ui: folder

# Secret for the RESTful API (optional)
# Authenticate by spedifying HTTP header `Authorization: Bearer ${secret}`
# ALWAYS set a secret if RESTful API is listening on 0.0.0.0
# secret: ""

# Outbound interface name
# interface-name: en0

# Static hosts for DNS server and connection establishment (like /etc/hosts)
#
# Wildcard hostnames are supported (e.g. *.clash.dev, *.foo.*.example.com)
# Non-wildcard domain names have a higher priority than wildcard domain names
# e.g. foo.example.com > *.example.com > .example.com
# P.S. +.foo.com equals to .foo.com and foo.com
hosts:
  # '*.clash.dev': 127.0.0.1
  # '.dev': 127.0.0.1
  # 'alpha.clash.dev': '::1'

  # Firebase Cloud Messaging
  'mtalk.google.com': 108.177.125.188
  # Google Dl
  'dl.google.com': 180.163.151.161
  'dl.l.google.com': 180.163.151.161

profile:
  # Store the `select` results in $HOME/.config/clash/.cache
  # set false If you don't want this behavior
  # when two different configurations have groups with the same name, the selected values are shared
  store-selected: false

# DNS server settings
# This section is optional. When not present, the DNS server will be disabled.
dns:
  enable: true
  listen: 127.0.0.1:53
  # ipv6: false # when the false, response to AAAA questions will be empty

  # These nameservers are used to resolve the DNS nameserver hostnames below.
  # Specify IP addresses only
  default-nameserver:
    - 119.29.29.29
  # enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16 # Fake IP addresses pool CIDR
  # use-hosts: true # lookup hosts and return IP record

  # Hostnames in this list will not be resolved with fake IPs
  # i.e. questions to these domain names will always be answered with their
  # real IP addresses
  fake-ip-filter:
    - '*.lan'
    - localhost.ptlogin2.qq.com
    - '+.srv.nintendo.net'
    - '+.stun.playstation.net'
    - '+.msftconnecttest.com'
    - '+.msftncsi.com'
    - '+.xboxlive.com'
    - 'msftconnecttest.com'
    - 'xbox.*.microsoft.com'
    - '*.battlenet.com.cn'
    - '*.battlenet.com'
    - '*.blzstatic.cn'
    - '*.battle.net'
    - '*.lab'
    - '*.vm'
    - 'tplogin.cn'
    - '*.fastip.icu'

  # Supports UDP, TCP, DoT, DoH. You can specify the port to connect to.
  # All DNS questions are sent directly to the nameserver, without proxies
  # involved. Clash answers the DNS question with the first result gathered.
  nameserver:
    - 119.29.29.29
    - 114.114.114.114
    - 202.141.176.93
    - 202.141.178.13
    - 117.50.10.10
    - 223.5.5.5
    - 119.28.28.28
    - https://dns.alidns.com/dns-query
    - tls://dns.rubyfish.cn:853
    # - 114.114.114.114 # default value
    # - 8.8.8.8 # default value
    # - tls://dns.rubyfish.cn:853 # DNS over TLS
    # - https://1.1.1.1/dns-query # DNS over HTTPS
    # - dhcp://en0 # dns from dhcp

  # When `fallback` is present, the DNS server will send concurrent requests
  # to the servers in this section along with servers in `nameservers`.
  # The answers from fallback servers are used when the GEOIP country
  # is not `CN`.
  fallback:
    - tcp://1.1.1.1
    - tls://1.1.1.1:853
    - tcp://1.1.1.1:53
    - tcp://208.67.222.222:443
    - tls://dns.google

  # If IP addresses resolved with servers in `nameservers` are in the specified
  # subnets below, they are considered invalid and results from `fallback`
  # servers are used instead.
  #
  # IP address resolved with servers in `nameserver` is used when
  # `fallback-filter.geoip` is true and when GEOIP of the IP address is `CN`.
  #
  # If `fallback-filter.geoip` is false, results from `nameserver` nameservers
  # are always used if not match `fallback-filter.ipcidr`.
  #
  # This is a countermeasure against DNS pollution attacks.
  # fallback-filter:
  #   geoip: true
  #   geoip-code: CN
  #   ipcidr:
  #     - 240.0.0.0/4
  #   domain:
  #     - '+.google.com'
  #     - '+.facebook.com'
  #     - '+.youtube.com'
  
  # Lookup domains via specific nameservers
  # nameserver-policy:
  #   'www.baidu.com': '114.114.114.114'
  #   '+.internal.crop.com': '10.0.0.1'

#
# https://github.com/Dreamacro/clash/wiki/premium-core-features
#
tun:
  enable: false
#   stack: system # or gvisor
#   # dns-hijack:
#   #   - 8.8.8.8:53
#   #   - tcp://8.8.8.8:53
#   macOS-auto-route: true # auto set global route
#   macOS-auto-detect-interface: true # conflict with interface-name

proxies:
# 支持的协议及加密算法示例请查阅 Clash 项目 README 以使用最新格式：https://github.com/Dreamacro/clash/wiki/configuration

# 服务器节点订阅
proxy-providers:
  # name: # Provider 名称
  #   type: http # http 或 file
  #   path: # 文件路径
  #   url: # 只有当类型为 HTTP 时才可用，您不需要在本地空间中创建新文件。
  #   interval: # 自动更新间隔，仅在类型为 HTTP 时可用
  #   health-check: # 健康检查选项从此处开始
  #     enable:
  #     url: 
  #     interval: 

  #
  # 「url」参数填写订阅链接
  #
  # 订阅链接可以使用 API 进行转换，如：https://dove.589669.xyz/web
  #
  #

  # 此处只是订阅示例，如果没有订阅链接的使用需求，此处及 proxy-groups 的相关内容可删除

  MyList:
    type: http
    url: "#Insert sub URL here#"
    interval: 28800
    path: ./Proxy/MyList.yaml # 注意此处文件名不可相同
    health-check:
      enable: true
      interval: 600
      url: http://www.gstatic.com/generate_204

  MyList2:
    type: http
    url: "#Insert sub URL 2 here#"
    interval: 28800
    path: ./Proxy/MyList2.yaml # 注意此处文件名不可相同
    health-check:
      enable: true
      interval: 600
      url: http://www.gstatic.com/generate_204

  # DuckDuckGoUS: #「冲鸭机场」订阅美国地区节点
  #   type: http
  #   url: "https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/ProxyList/US.yaml" # 放机场订阅链接
  #   interval: 3600
  #   path: ./Proxy/US.yaml # 注意此处文件名不可相同
  #   health-check:
  #     enable: true
  #     interval: 600
  #     url: http://www.gstatic.com/generate_204

proxy-groups:
# 策略组示例请查阅 Clash 项目 README 以使用最新格式：https://github.com/Dreamacro/clash/wiki/configuration

#
# 策略组说明
#
# 「MATCH」类似 Surge 的「Final」，此处用于选择白名单模式(PROXY 策略)和黑名单模式(DIRECT 策略)
#
# 「Streaming」和「StreamingSE」比较好理解，有专用于流媒体的节点就设置到其中，如果没有「StreamingSE」的需求可以连带 Rule 部分一起删掉，「Streaming」需至少保留 Rule，用「PROXY」即可。
#
# 「PROXY」是代理规则策略，它可以指定为某个节点或嵌套一个其他策略组，如：「自动测试」、「Fallback」或「负载均衡」的策略组，关于这 3 个策略组的具体示例可以看官方示例：https://github.com/Dreamacro/clash
#

  # 注意此处的「use」而不是「proxies」，当然也可以不用在此先嵌套一个策略组进行选择，可以直接使用，如
  #
  # # 代理节点选择
  # - name: "PROXY"
  #   type: select
  #   use:
  #     - DuckDuckGo # 嵌套使用订阅节点策略组
  #   proxies:
  #     - Fallback
  #     - 1
  #     - 2
  #     - 3
  #
  # 但如果订阅节点很多选起来就很麻烦，不如先嵌套一个策略组进行手动或自动的选择。

  # 手动选择订阅节点
  - name: "Select"
    type: select # 亦可使用 fallback 或 load-balance
    use: # 注意此处是「use」
      - MyList # 这是上面「proxy-providers」的名称
      - MyList2 # 这是上面「proxy-providers」的名称

  # - name: "US"
  #   type: select # 亦可使用 fallback 或 load-balance
  #   use: # 注意此处是「use」
  #     - DuckDuckGoUS # 这是上面「proxy-providers」的名称

  # url-test根据测试结果自动选择
  - name: "Fastest"
    type: url-test
    use:
      - MyList
      - MyList2
    url: 'http://www.gstatic.com/generate_204'
    interval: 1800
    tolerance: 100

  # Fallback 比较实用的策略组类型，用于测试服务器节点的可用性，当第一个节点不可用时切换到第二个，以此类推。
  - name: "Fallback"
    type: fallback
    use:
      - MyList
      - MyList2
    url: 'http://www.gstatic.com/generate_204'
    interval: 1800

  # 代理节点选择
  - name: "PROXY"
    type: select
    proxies:
      - Select # 嵌套使用订阅节点策略组
      - Fastest
      - Fallback

  - name: "FCMPROXY"
    type: select
    use:
      - MyList
      - MyList2

  # 白名单模式 PROXY, 黑名单模式 DIRECT, 不知道别动
  - name: "MATCH"
    type: select
    proxies:
      - PROXY
      - DIRECT

  # 国际流媒体服务
  - name: "Streaming"
    type: select
    proxies:
      - PROXY

  # 中国流媒体服务（面向海外版本）
  # 用于观看部分国内流媒体面向港澳台的地区的限定内容，此处应放港澳台节点，如果没有此需求可删除此处策略组及相关规则
  - name: "StreamingSE"
    type: select
    proxies:
      - DIRECT

  - name: "AppleMusic"
    type: select
    proxies:
      - PROXY
      - DIRECT

  # My rules
  - name: "MyRules"
    type: select
    proxies:
      - PROXY
      - DIRECT

  # My rules for direct connect
  - name: "MyRulesDirect"
    type: select
    proxies:
      - DIRECT
      - PROXY

  # Outlook server rules
  - name: "Outlook"
    type: select
    proxies:
      - DIRECT
      - PROXY

  # LinkedIn
  - name: "LinkedIn"
    type: select
    proxies:
      - PROXY
      - DIRECT

  # Google FCM
  - name: "GoogleFCM"
    type: select
    proxies:
      - DIRECT
      - FCMPROXY
      - PROXY

  # Google Gmail IMAP & SMTP servers, not the web site
  - name: "Gmail"
    type: select
    use:
      - MyList
      - MyList2

  # Wechat Push
  - name: "WechatPush"
    type: select
    proxies:
      - DIRECT
      - PROXY

# 关于 Rule Provider 请查阅：https://lancellc.gitbook.io/clash/clash-config-file/rule-provider

rule-providers:
# name: # Provider 名称
#   type: http # http 或 file
#   behavior: classical # 或 ipcidr、domain
#   path: # 文件路径
#   url: # 只有当类型为 HTTP 时才可用，您不需要在本地空间中创建新文件。
#   interval: # 自动更新间隔，仅在类型为 HTTP 时可用

  Unbreak:
    type: http
    behavior: classical
    path: ./RuleSet/Unbreak.yaml
    url: https://fastip.icu/shenjiguize/Clash/RuleSet/Unbreak.yaml
    interval: 86400

  Streaming:
    type: http
    behavior: classical
    path: ./RuleSet/StreamingMedia/Streaming.yaml
    url: https://fastip.icu/shenjiguize/Clash/RuleSet/StreamingMedia/Streaming.yaml
    interval: 86400

  StreamingSE:
    type: http
    behavior: classical
    path: ./RuleSet/StreamingMedia/StreamingSE.yaml
    url: https://fastip.icu/shenjiguize/Clash/RuleSet/StreamingMedia/StreamingSE.yaml
    interval: 86400

  AppleMusic:
    type: http
    behavior: classical
    path: ./RuleSet/Extra/Apple/Music.yaml
    url: https://fastip.icu/shenjiguize/Clash/RuleSet/Extra/Apple/Music.yaml
    interval: 86400

  Global:
    type: http
    behavior: classical
    path: ./RuleSet/Global.yaml
    url: https://fastip.icu/shenjiguize/Clash/RuleSet/Global.yaml
    interval: 86400

  China:
    type: http
    behavior: classical
    path: ./RuleSet/China.yaml
    url: https://fastip.icu/shenjiguize/Clash/RuleSet/China.yaml
    interval: 86400

  ChinaIP:
    type: http
    behavior: ipcidr
    path: ./RuleSet/Extra/ChinaIP.yaml
    url: https://fastip.icu/shenjiguize/Clash/RuleSet/Extra/ChinaIP.yaml
    interval: 86400

  MyRules:
    type: http
    behavior: classical
    path: ./RuleSet/MyRules.yaml
    url: https://fastip.icu/shenjiguize/Clash/RuleSet/MyRules.yaml
    interval: 86400

  MyRulesDirect:
    type: http
    behavior: classical
    path: ./RuleSet/MyRulesDirect.yaml
    url: https://fastip.icu/shenjiguize/Clash/RuleSet/MyRulesDirect.yaml
    interval: 86400

  Outlook:
    type: http
    behavior: classical
    path: ./RuleSet/Outlook.yaml
    url: https://fastip.icu/shenjiguize/Clash/RuleSet/Outlook.yaml
    interval: 86400

  LinkedIn:
    type: http
    behavior: classical
    path: ./RuleSet/Extra/LinkedIn.yaml
    url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/LinkedIn/LinkedIn.yaml
    interval: 86400

  GoogleFCM:
    type: http
    behavior: classical
    path: ./RuleSet/Extra/Google/FCM.yaml
    url: https://fastip.icu/shenjiguize/Clash/RuleSet/Extra/Google/FCM.yaml
    interval: 86400

  Gmail:
    type: http
    behavior: classical
    path: ./RuleSet/Extra/Google/Gmail.yaml
    url: https://fastip.icu/shenjiguize/Clash/RuleSet/Extra/Google/Gmail.yaml
    interval: 86400

  WechatPush:
    type: http
    behavior: classical
    path: ./RuleSet/Extra/Wechat.yaml
    url: https://fastip.icu/shenjiguize/Clash/RuleSet/Extra/Wechat.yaml
    interval: 86400

  MyApps:
    type: http
    behavior: classical
    path: ./RuleSet/Extra/MyApps.yaml
    url: https://fastip.icu/shenjiguize/Clash/RuleSet/Extra/MyApps.yaml
    interval: 86400

  # Below are from https://github.com/Loyalsoldier/clash-rules
  icloud:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/icloud.txt"
    path: ./RuleSet/icloud.yaml
    interval: 86400

  apple:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/apple.txt"
    path: ./RuleSet/apple.yaml
    interval: 86400

  google:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/google.txt"
    path: ./RuleSet/google.yaml
    interval: 86400

  proxy:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/proxy.txt"
    path: ./RuleSet/proxy.yaml
    interval: 86400

  direct:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/direct.txt"
    path: ./RuleSet/direct.yaml
    interval: 86400

  private:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/private.txt"
    path: ./RuleSet/private.yaml
    interval: 86400

  gfw:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/gfw.txt"
    path: ./RuleSet/gfw.yaml
    interval: 86400

  tld-not-cn:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/tld-not-cn.txt"
    path: ./RuleSet/tld-not-cn.yaml
    interval: 86400

  telegramcidr:
    type: http
    behavior: ipcidr
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/telegramcidr.txt"
    path: ./RuleSet/telegramcidr.yaml
    interval: 86400

  cncidr:
    type: http
    behavior: ipcidr
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/cncidr.txt"
    path: ./RuleSet/cncidr.yaml
    interval: 86400

  lancidr:
    type: http
    behavior: ipcidr
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/lancidr.txt"
    path: ./RuleSet/lancidr.yaml
    interval: 86400

  applications:
    type: http
    behavior: classical
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/applications.txt"
    path: ./RuleSet/applications.yaml
    interval: 86400

# 规则
rules:
  # My Rules
  - RULE-SET,MyRules,MyRules

  # My Rules for direct connection
  - RULE-SET,MyRulesDirect,MyRulesDirect

  # Outlook server Rules
  - RULE-SET,Outlook,Outlook

  # LinkedIn rules
  - RULE-SET,LinkedIn,LinkedIn

  # Google FCM
  - RULE-SET,GoogleFCM,GoogleFCM

  # Google Gmail
  - RULE-SET,Gmail,Gmail

  # Wechat Push
  - RULE-SET,WechatPush,WechatPush

  # My Apps
  - RULE-SET,MyApps,MyRulesDirect

  # Unbreak
  - RULE-SET,Unbreak,DIRECT

  # Global Area Network

  # (Streaming Media)
  - RULE-SET,Streaming,Streaming

  # (StreamingSE)
  - RULE-SET,StreamingSE,StreamingSE

  # (AppleMusic)
  - RULE-SET,AppleMusic,AppleMusic

  # (DNS Cache Pollution) / (IP Blackhole) / (Region-Restricted Access Denied) / (Network Jitter)
  - RULE-SET,Global,PROXY

  # Below are from https://github.com/Loyalsoldier/clash-rules
  - RULE-SET,lancidr,DIRECT
  - RULE-SET,cncidr,DIRECT
  - RULE-SET,private,DIRECT
  - RULE-SET,direct,DIRECT
  - RULE-SET,telegramcidr,PROXY
  - RULE-SET,gfw,PROXY
  - RULE-SET,applications,MyRulesDirect
  - RULE-SET,icloud,MyRulesDirect
  - RULE-SET,apple,MyRulesDirect
  - RULE-SET,google,MyRulesDirect

  # China Area Network
  - RULE-SET,China,DIRECT

  - MATCH,MATCH
